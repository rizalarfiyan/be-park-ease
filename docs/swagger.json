{
    "swagger": "2.0",
    "info": {
        "description": "This is a API documentation of BE Park Ease",
        "title": "BE Park Ease API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Rizal Arfiyan",
            "url": "https://rizalrfiyan.com",
            "email": "rizal.arfiyan.23@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Base Home",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "home"
                ],
                "summary": "Get Base Home based on parameter",
                "operationId": "get-base-home",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Auth Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Post Auth Login based on parameter",
                "operationId": "post-auth-login",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AuthLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Auth Me",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get Auth Me based on parameter",
                "operationId": "get-auth-me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/middleware.AuthUserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/history": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "All History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "Get All History based on parameter",
                "operationId": "get-all-history",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "location_code",
                            "vehicle_type_code",
                            "vehicle_number",
                            "date",
                            "type"
                        ],
                        "type": "string",
                        "description": "Order by",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "entry",
                            "exit",
                            "fine"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle Type",
                        "name": "vehicle_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location",
                        "name": "location",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.BaseResponsePagination-response_EntryHistory"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/history/calculate": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Calculate Price History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "Post Calculate Price History based on parameter",
                "operationId": "post-calculate-price-history",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CalculatePriceHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "number"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/history/entry": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Entry History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "Post Create Entry History based on parameter",
                "operationId": "post-create-entry-history",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateEntryHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/history/exit": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Exit History",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "Post Create Exit History based on parameter",
                "operationId": "post-create-exit-history",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateExitHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/location": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "All Location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Get All Location based on parameter",
                "operationId": "get-all-location",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "code",
                            "name",
                            "is_exit",
                            "date"
                        ],
                        "type": "string",
                        "description": "Order by",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Is Exit",
                        "name": "is_exit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.BaseResponsePagination-response_Location"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Create Location",
                "operationId": "create-location",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/location/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Get Location based on code",
                "operationId": "get-location-by-code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.Location"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Update Location",
                "operationId": "update-location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location Code",
                        "name": "code",
                        "in": "path"
                    },
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "Delete Location",
                "operationId": "delete-location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/setting": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Get All Setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "setting"
                ],
                "summary": "Get All Setting based on parameter",
                "operationId": "get-all-setting",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.SettingResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Or Update Setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "setting"
                ],
                "summary": "Post Create Or Update based on parameter",
                "operationId": "post-create-or-update-setting",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateOrUpdateSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "All User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get All User based on parameter",
                "operationId": "get-all-user",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "username",
                            "role",
                            "status",
                            "date"
                        ],
                        "type": "string",
                        "description": "Order by",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "admin",
                            "karyawan"
                        ],
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "active",
                            "banned"
                        ],
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.BaseResponsePagination-response_User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Post Create User based on parameter",
                "operationId": "post-create-user",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/user/change-password": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Post Change Password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Post Change Password User based on parameter",
                "operationId": "post-change-password-user",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "User By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User By ID based on parameter",
                "operationId": "get-user-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Post Update User based on parameter",
                "operationId": "put-update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/vehicle_type": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "All Vehicle Type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle-type"
                ],
                "summary": "Get All Vehicle Type based on parameter",
                "operationId": "get-all-vehicle-type",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "code",
                            "name",
                            "price",
                            "date"
                        ],
                        "type": "string",
                        "description": "Order by",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.BaseResponsePagination-response_VehicleType"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create Vehicle Type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle-type"
                ],
                "summary": "Post Create Vehicle Type based on parameter",
                "operationId": "post-create-vehicle-type",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateVehicleTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/vehicle_type/{code}": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Vehicle Type By Code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle-type"
                ],
                "summary": "Get Vehicle Type By Code based on parameter",
                "operationId": "get-vehicle-type-by-code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle Type Code",
                        "name": "code",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.VehicleType"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Update Vehicle Type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle-type"
                ],
                "summary": "Put Update Vehicle Type based on parameter",
                "operationId": "put-update-vehicle-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle Type Code",
                        "name": "code",
                        "in": "path"
                    },
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateVehicleTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Delete Vehicle Type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle-type"
                ],
                "summary": "Put Delete Vehicle Type based on parameter",
                "operationId": "delete-vehicle-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle Type Code",
                        "name": "code",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "middleware.AuthUserData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/sql.UserRole"
                },
                "status": {
                    "$ref": "#/definitions/sql.UserStatus"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.AuthLoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.CalculatePriceHistoryRequest": {
            "type": "object",
            "properties": {
                "entry_history_id": {
                    "type": "string",
                    "example": "H251845879AA5F13"
                },
                "is_fine": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "request.ChangePasswordRequest": {
            "type": "object",
            "properties": {
                "old_password": {
                    "type": "string",
                    "example": "Password123@"
                },
                "password": {
                    "type": "string",
                    "example": "Password123@"
                },
                "password_confirmation": {
                    "type": "string",
                    "example": "Password123@"
                }
            }
        },
        "request.CreateEntryHistoryRequest": {
            "type": "object",
            "properties": {
                "location_code": {
                    "type": "string",
                    "example": "DOM001"
                },
                "vehicle_number": {
                    "type": "string",
                    "example": "AB2342NW"
                },
                "vehicle_type_code": {
                    "type": "string",
                    "example": "K001"
                }
            }
        },
        "request.CreateExitHistoryRequest": {
            "type": "object",
            "properties": {
                "entry_history_id": {
                    "type": "string",
                    "example": "H251845879AA5F13"
                },
                "location_code": {
                    "type": "string",
                    "example": "DOM002"
                },
                "price": {
                    "type": "number",
                    "example": 32500
                }
            }
        },
        "request.CreateLocationRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "D1"
                },
                "is_exit": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "DOM 1"
                }
            }
        },
        "request.CreateOrUpdateSettingRequest": {
            "type": "object",
            "properties": {
                "fine_ticket_calculation": {
                    "type": "integer"
                },
                "next_hour_calculation": {
                    "type": "integer"
                }
            }
        },
        "request.CreateUserRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Paijo Royo Royo"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/sql.UserRole"
                        }
                    ],
                    "example": "karyawan"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/sql.UserStatus"
                        }
                    ],
                    "example": "active"
                },
                "username": {
                    "type": "string",
                    "example": "paijo"
                }
            }
        },
        "request.CreateVehicleTypeRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "K001"
                },
                "name": {
                    "type": "string",
                    "example": "Bicycle"
                },
                "price": {
                    "type": "number",
                    "example": 2000
                }
            }
        },
        "request.UpdateLocationRequest": {
            "type": "object",
            "properties": {
                "is_exit": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "DOM 1"
                }
            }
        },
        "request.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Paijo Royo Royo"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/sql.UserRole"
                        }
                    ],
                    "example": "karyawan"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/sql.UserStatus"
                        }
                    ],
                    "example": "active"
                },
                "username": {
                    "type": "string",
                    "example": "paijo"
                }
            }
        },
        "request.UpdateVehicleTypeRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Bicycle"
                },
                "price": {
                    "type": "number",
                    "example": 2000
                }
            }
        },
        "response.BaseMetadataPagination": {
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.BaseResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 999
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Message!"
                }
            }
        },
        "response.BaseResponsePagination-response_EntryHistory": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.EntryHistory"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.BaseMetadataPagination"
                }
            }
        },
        "response.BaseResponsePagination-response_Location": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Location"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.BaseMetadataPagination"
                }
            }
        },
        "response.BaseResponsePagination-response_User": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.User"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.BaseMetadataPagination"
                }
            }
        },
        "response.BaseResponsePagination-response_VehicleType": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.VehicleType"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/response.BaseMetadataPagination"
                }
            }
        },
        "response.EntryHistory": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location_code": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vehicle_number": {
                    "type": "string"
                },
                "vehicle_type_code": {
                    "type": "string"
                }
            }
        },
        "response.Location": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "is_exit": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.SettingResponse": {
            "type": "object",
            "properties": {
                "fine_ticket_calculation": {
                    "type": "integer"
                },
                "fine_ticket_calculation_description": {
                    "type": "string"
                },
                "next_hour_calculation": {
                    "type": "integer"
                },
                "next_hour_calculation_description": {
                    "type": "string"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/sql.UserRole"
                },
                "status": {
                    "$ref": "#/definitions/sql.UserStatus"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.VehicleType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "sql.UserRole": {
            "type": "string",
            "enum": [
                "admin",
                "karyawan"
            ],
            "x-enum-varnames": [
                "UserRoleAdmin",
                "UserRoleKaryawan"
            ]
        },
        "sql.UserStatus": {
            "type": "string",
            "enum": [
                "active",
                "banned"
            ],
            "x-enum-varnames": [
                "UserStatusActive",
                "UserStatusBanned"
            ]
        }
    },
    "securityDefinitions": {
        "AccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}